name: Build & Deploy to AKS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  IMAGE_NAME: agentgraph

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: ACR Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }} .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Create namespace
        run: kubectl apply -f k8s/namespace.yaml

      - name: Deploy
        run: |
          export IMAGE_TAG=${{ steps.vars.outputs.TAG }}
          export ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
          sed "s|<ACR_LOGIN_SERVER>|$ACR_LOGIN_SERVER|g; s|\${IMAGE_TAG}|$IMAGE_TAG|g" k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml

      - name: Wait for rollout
        run: kubectl rollout status deploy/agentgraph-deployment -n agentgraph

      - name: Debug Pods
        if: failure()   # only run if rollout fails
        run: kubectl get pods -n agentgraph -o wide

      - name: Pod Logs
        if: failure()   # only run if rollout fails
        run: kubectl logs -l app=agentgraph -n agentgraph --tail=50 --all-containers=true
